// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/JosiahWitt/lambgo/internal/zipper (interfaces: ZipAPI)

// Package mock_zipper is a generated GoMock package.
package mock_zipper

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockZipAPI is a mock of ZipAPI interface.
type MockZipAPI struct {
	ctrl     *gomock.Controller
	recorder *MockZipAPIMockRecorder
}

// MockZipAPIMockRecorder is the mock recorder for MockZipAPI.
type MockZipAPIMockRecorder struct {
	mock *MockZipAPI
}

// NewMockZipAPI creates a new mock instance.
func NewMockZipAPI(ctrl *gomock.Controller) *MockZipAPI {
	mock := &MockZipAPI{ctrl: ctrl}
	mock.recorder = &MockZipAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockZipAPI) EXPECT() *MockZipAPIMockRecorder {
	return m.recorder
}

// ZipFile mocks base method.
func (m *MockZipAPI) ZipFile(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ZipFile", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ZipFile indicates an expected call of ZipFile.
func (mr *MockZipAPIMockRecorder) ZipFile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ZipFile", reflect.TypeOf((*MockZipAPI)(nil).ZipFile), arg0)
}

// NEW creates a MockZipAPI.
func (*MockZipAPI) NEW(ctrl *gomock.Controller) *MockZipAPI {
	return NewMockZipAPI(ctrl)
}
