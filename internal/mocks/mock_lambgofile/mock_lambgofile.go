// Code generated by `ensure mocks generate`. DO NOT EDIT.
// Source: github.com/JosiahWitt/lambgo/internal/lambgofile (interfaces: LoaderAPI)

// Package mock_lambgofile is a generated GoMock package.
package mock_lambgofile

import (
	"github.com/JosiahWitt/lambgo/internal/lambgofile"
	"github.com/golang/mock/gomock"
	"reflect"
)

// MockLoaderAPI is a mock of the LoaderAPI interface in github.com/JosiahWitt/lambgo/internal/lambgofile.
type MockLoaderAPI struct {
	ctrl     *gomock.Controller
	recorder *MockLoaderAPIMockRecorder
}

// MockLoaderAPIMockRecorder is the mock recorder for MockLoaderAPI.
type MockLoaderAPIMockRecorder struct {
	mock *MockLoaderAPI
}

// NewMockLoaderAPI creates a new mock instance.
func NewMockLoaderAPI(ctrl *gomock.Controller) *MockLoaderAPI {
	mock := &MockLoaderAPI{ctrl: ctrl}
	mock.recorder = &MockLoaderAPIMockRecorder{mock}
	return mock
}

// NEW creates a MockLoaderAPI. This method is used internally by ensure.
func (*MockLoaderAPI) NEW(ctrl *gomock.Controller) *MockLoaderAPI {
	return NewMockLoaderAPI(ctrl)
}

// EXPECT returns a struct that allows setting up expectations.
func (m *MockLoaderAPI) EXPECT() *MockLoaderAPIMockRecorder {
	return m.recorder
}

// LoadConfig mocks LoadConfig on LoaderAPI.
func (m *MockLoaderAPI) LoadConfig(_pwd string) (*lambgofile.Config, error) {
	m.ctrl.T.Helper()
	inputs := []interface{}{_pwd}
	ret := m.ctrl.Call(m, "LoadConfig", inputs...)
	ret0, _ := ret[0].(*lambgofile.Config)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoadConfig sets up expectations for calls to LoadConfig.
// Calling this method multiple times allows expecting multiple calls to LoadConfig with a variety of parameters.
//
// Inputs:
//
//  pwd string
//
// Outputs:
//
//  *lambgofile.Config
//  error
func (mr *MockLoaderAPIMockRecorder) LoadConfig(_pwd interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	inputs := []interface{}{_pwd}
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadConfig", reflect.TypeOf((*MockLoaderAPI)(nil).LoadConfig), inputs...)
}
